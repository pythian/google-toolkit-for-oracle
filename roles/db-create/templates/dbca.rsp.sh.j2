#!/bin/bash

response_file="{{ swlib_unzip_path }}/dbca_{{ db_name }}.rsp"
template_file="{{ oracle_home }}/assistants/dbca/templates/General_Purpose.dbc"

cp "{{ oracle_home }}/assistants/dbca/dbca.rsp" "${response_file}"

sed -i '/^\#\{0,\} \{0,\}gdbName \{0,\}=/I                   s~\#\{0,\} \{0,\}gdbName \{0,\}=.*~gdbName='{{ db_name }}'.'{{ db_domain }}'~I'                        "${response_file}"
sed -i '/^\#\{0,\} \{0,\}sid \{0,\}=/I                       s~\#\{0,\} \{0,\}sid \{0,\}=.*~sid='{{ db_name }}'~I'                                                  "${response_file}"
sed -i '/^\#\{0,\} \{0,\}databaseConfigType \{0,\}=/I        s~\#\{0,\} \{0,\}databaseConfigType \{0,\}=.*~databaseConfigType='{{ db_config_type }}'~I'             "${response_file}"
sed -i '/^\#\{0,\} \{0,\}createAsContainerDatabase \{0,\}=/I s~\#\{0,\} \{0,\}createAsContainerDatabase \{0,\}=.*~createAsContainerDatabase='{{ container_db | string }}'~I' "${response_file}"
sed -i '/^\#\{0,\} \{0,\}numberOfPDBs \{0,\}=/I              s~\#\{0,\} \{0,\}numberOfPDBs \{0,\}=.*~numberOfPDBs='{{ pdb_count }}'~I'                              "${response_file}"
sed -i '/^\#\{0,\} \{0,\}pdbName \{0,\}=/I                   s~\#\{0,\} \{0,\}pdbName \{0,\}=.*~pdbName='{{ pdb_prefix }}'~I'                                       "${response_file}"
sed -i '/^\#\{0,\} \{0,\}emConfiguration \{0,\}=/I           s~\#\{0,\} \{0,\}emConfiguration \{0,\}=.*~emConfiguration=NONE~I'                                     "${response_file}"
sed -i '/^\#\{0,\} \{0,\}characterSet \{0,\}=/I              s~\#\{0,\} \{0,\}characterSet \{0,\}=.*~characterSet='{{ charset }}'~I'                                "${response_file}"
sed -i '/^\#\{0,\} \{0,\}nationalCharacterSet \{0,\}=/I      s~\#\{0,\} \{0,\}nationalCharacterSet \{0,\}=.*~nationalCharacterSet='{{ ncharset }}'~I'               "${response_file}"
sed -i '/^\#\{0,\} \{0,\}databaseType \{0,\}=/I              s~\#\{0,\} \{0,\}databaseType \{0,\}=.*~databaseType='{{ db_type }}'~I'                                "${response_file}"
sed -i '/^\#\{0,\} \{0,\}automaticMemoryManagement \{0,\}=/I s~\#\{0,\} \{0,\}automaticMemoryManagement \{0,\}=.*~automaticMemoryManagement=FALSE~I'                "${response_file}"

sed -i '/^\#\{0,\} \{0,\}sysPassword \{0,\}=/I               s~\#\{0,\} \{0,\}sysPassword \{0,\}=.*~#sysPassword=~I'                                                "${response_file}"
sed -i '/^\#\{0,\} \{0,\}systemPassword \{0,\}=/I            s~\#\{0,\} \{0,\}systemPassword \{0,\}=.*~#systemPassword=~I'                                          "${response_file}"
sed -i '/^\#\{0,\} \{0,\}pdbAdminPassword \{0,\}=/I          s~\#\{0,\} \{0,\}pdbAdminPassword \{0,\}=.*~#pdbAdminPassword=~I'                                      "${response_file}"

if [[ "{{ free_edition }}" == "True" ]]; then
  sed -i '/^\#\{0,\} \{0,\}templateName \{0,\}=/I            s~\#\{0,\} \{0,\}templateName \{0,\}=.*~templateName=FREE_Database.dbc~I'                              "${response_file}"
  sed -i '/^\#\{0,\} \{0,\}sampleSchema \{0,\}=/I            s~\#\{0,\} \{0,\}sampleSchema \{0,\}=.*~sampleSchema=FALSE~I'                                          "${response_file}"
  sed -i '/^\#\{0,\} \{0,\}initParams \{0,\}=/I              s~\#\{0,\} \{0,\}initParams \{0,\}=.*~initParams=pga_aggregate_target=400M,sga_target=1600M,streams_pool_size=64M,use_large_pages=AUTO_ONLY,db_domain='{{ db_domain }}',diagnostic_dest='{{ oracle_base }}'~I' "${response_file}"
else
  sed -i '/^\#\{0,\} \{0,\}templateName \{0,\}=/I            s~\#\{0,\} \{0,\}templateName \{0,\}=.*~templateName=General_Purpose.dbc~I'                            "${response_file}"
  sed -i '/^\#\{0,\} \{0,\}initParams \{0,\}=/I              s~\#\{0,\} \{0,\}initParams \{0,\}=.*~initParams=pga_aggregate_target='{{ pga_target }}',sga_target='{{ sga_target }}',streams_pool_size=64M,use_large_pages=ONLY,db_domain='{{ db_domain }}',diagnostic_dest='{{ oracle_base }}'~I' "${response_file}"

  # custom dbca templates do not work for container databases due to bugs, hence editing existing one
  sed -i 's|<customSGA>.*</customSGA>|<customSGA>true</customSGA>|Ig' "${template_file}"
  sed -i '/memory_target/Id'                                          "${template_file}"
fi

if [[ "{{ gi_install }}" == "True" ]]; then
  sed -i '/^\#\{0,\} \{0,\}storageType \{0,\}=/I             s~\#\{0,\} \{0,\}storageType \{0,\}=.*~storageType=ASM~I'                                              "${response_file}"
  sed -i '/^\#\{0,\} \{0,\}diskGroupName \{0,\}=/I           s~\#\{0,\} \{0,\}diskGroupName \{0,\}=.*~diskGroupName='{{ data_destination }}'~I'                     "${response_file}"
  sed -i '/^\#\{0,\} \{0,\}recoveryGroupName \{0,\}=/I       s~\#\{0,\} \{0,\}recoveryGroupName \{0,\}=.*~recoveryGroupName='{{ reco_destination }}'~I'             "${response_file}"
else
  sed -i '/^\#\{0,\} \{0,\}storageType \{0,\}=/I             s~\#\{0,\} \{0,\}storageType \{0,\}=.*~storageType=FS~I'                                               "${response_file}"
  sed -i '/^\#\{0,\} \{0,\}datafileDestination \{0,\}=/I     s~\#\{0,\} \{0,\}datafileDestination \{0,\}=.*~datafileDestination='{{ data_destination }}'~I'         "${response_file}"
  sed -i '/^\#\{0,\} \{0,\}recoveryAreaDestination \{0,\}=/I s~\#\{0,\} \{0,\}recoveryAreaDestination \{0,\}=.*~recoveryAreaDestination='{{ reco_destination }}'~I' "${response_file}"
  sed -i '/^\#\{0,\} \{0,\}initParams \{0,\}=/I              s~$~,db_create_file_dest='{{ data_destination }}'~'                                                    "${response_file}"
fi
